# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from verizon.api_helper import APIHelper
from verizon.configuration import Server
from verizon.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from verizon.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from verizon.models.services_profile_registration_result import ServicesProfileRegistrationResult
from verizon.models.services_profile_registration import ServicesProfileRegistration
from verizon.exceptions.edge_service_launch_result_exception import EdgeServiceLaunchResultException


class ServiceLaunchProfilesController(BaseController):

    """A Controller to access Endpoints in the verizon API."""
    def __init__(self, config):
        super(ServiceLaunchProfilesController, self).__init__(config)

    def submit_service_profile(self,
                               id,
                               body,
                               account_name=None):
        """Does a PUT request to /v1/service/profile/{id}/submit.

        Submit a service profile

        Args:
            id (string): Unique service profile ID.
            body (ServicesProfileRegistration): The request body passes all of
                the needed parameters to create a service profile.
            account_name (string, optional): User account name.

        Returns:
            ServicesProfileRegistrationResult: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT11)
            .path('/v1/service/profile/{id}/submit')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('id')
                            .value(id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('AccountName')
                          .value(account_name))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ServicesProfileRegistrationResult.from_dictionary)
            .local_error('400', 'HTTP 400 Bad Request', EdgeServiceLaunchResultException)
            .local_error('401', 'HTTP 401 Unauthorized', EdgeServiceLaunchResultException)
            .local_error('412', 'Precondition Failed', EdgeServiceLaunchResultException)
            .local_error('500', 'Internal Server Error', EdgeServiceLaunchResultException)
        ).execute()

    def create_service_profile(self,
                               account_name,
                               body):
        """Does a POST request to /v1/service/profile.

        Creates a service profile that describes the resource requirements of
        a service.

        Args:
            account_name (string): User account name.
            body (CreateServiceProfileRequest): The request body passes all of
                the needed parameters to create a service profile.

        Returns:
            ServicesProfileRegistration: Response from the API. service
                profile ID

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT11)
            .path('/v1/service/profile')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('AccountName')
                          .value(account_name))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ServicesProfileRegistration.from_dictionary)
            .local_error('400', 'HTTP 400 Bad Request', EdgeServiceLaunchResultException)
            .local_error('401', 'HTTP 401 Unauthorized', EdgeServiceLaunchResultException)
        ).execute()

    def update_service_profile(self,
                               id,
                               body,
                               account_name=None):
        """Does a PUT request to /v1/service/profile/{Id}.

        Update the definition of a Service Profile.

        Args:
            id (string): Unique ID of the service profile.
            body (CreateServiceProfileRequest): The request body passes the
                rest of the needed parameters to create a service profile.
                Parameters other than `serviceProfileId` will be edited
            account_name (string, optional): User account name.

        Returns:
            ServicesProfileRegistration: Response from the API. service
                profile ID

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT11)
            .path('/v1/service/profile/{Id}')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('Id')
                            .value(id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('AccountName')
                          .value(account_name))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(ServicesProfileRegistration.from_dictionary)
            .local_error('400', 'HTTP 400 Bad Request', EdgeServiceLaunchResultException)
            .local_error('401', 'HTTP 401 Unauthorized', EdgeServiceLaunchResultException)
        ).execute()
